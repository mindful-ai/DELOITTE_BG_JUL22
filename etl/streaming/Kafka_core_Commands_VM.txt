Make sure that all zookeeper instances are stopped.

sudo zookeeper-server-stop.sh $KAFKA_HOME/config/zookeeper.properties
==============================================================================================
zookeeper-server-start.sh $KAFKA_HOME/config/zookeeper.properties > /tmp/zkservinit.log 2>&1 &

kafka-server-start.sh $KAFKA_HOME/config/server.properties > /tmp/kfservinit.log 2>&1 &

kafka-topics.sh --list --zookeeper localhost:2181
kafka-topics.sh --zookeeper localhost:2181 --delete --topic first-topic

kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic first-topic

kafka-topics.sh --list --zookeeper localhost:2181

kafka-topics.sh --zookeeper localhost:2181 --describe --topic first-topic

kafka-console-producer.sh --broker-list localhost:9092 --topic first-topic
>This is a message
>This is another message

kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --from-beginning

Consumer Group
--------------
kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 3 --topic first-topic
# Make sure topic is created with 3 partitions

kafka-console-producer.sh --broker-list localhost:9092 --topic first-topic
>This is message 1
>This is message 2
>This is message 3
>This is message 4
>This is message 5
>This is message 6

# Open terminal 2 and run a consumer
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-first-application
# Open terminal 3 and run another consumer
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-first-application
# Open terminal 4 and run another consumer
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-first-application
# Now if we produce messages from producer terminal we will see that the messages are partitioned

# We can kill one of the consumers with Control+C and give more messages on producer
# We will notice that the messages are partitioned between existing consumers

Offset
------
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-second-application --from-beginning
# The above will display all messages from the beginning
# Close this consumer. Run it again
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-second-application --from-beginning
# We will see that beginning messages are not shown because offset is set to last message that was read
# Any new message will come through
# Close this consumer. Produce some messages
# We will now run the consumer
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-second-application
# We are not giving the --from-beginning it will read from the last offset

Consumer Group Command
----------------------
kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list
kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group my-second-application
# While a consumer from this group is not running we will see the message as such.
# When one or two consumers from this group are running then we will be able to watch the consumers
# Lag can be show as well

# Reset the offset
kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group my-second-application --reset-offsets --to-earliest --execute --topic first-topic

# We will now run the consumer
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-second-application --from-beginning
# We will see that beginning messages are not shown because offset is set
# Close this consumer.

# Reset the offset back by 2 messages
kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group my-second-application --reset-offsets --shift-by -2 --execute --topic first-topic

# We will now run the consumer
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic first-topic --group my-second-application
# We are not giving the --from-beginning it will read from the last offset
# Close this consumer. 

=========================================================
kafka-server-stop.sh $KAFKA_HOME/config/server.properties
zookeeper-server-stop.sh $KAFKA_HOME/config/zookeeper.properties
================================================================
